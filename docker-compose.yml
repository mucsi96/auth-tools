services:
  web:
    image: mucsi96/hello-client
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.web.loadbalancer.server.port=80"
      - "traefik.http.middlewares.auth.forwardauth.address=http://agent:8080/authorize?namespace=traefik&scopes=${TRAEFIK_CLIENT_ID}/dashboard-access&requiredRoles=Dashboard.Viewer"
      - "traefik.http.middlewares.auth.forwardauth.addAuthCookiesToResponse=accessToken,refreshToken,idToken"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.rule=Host(`web.auth-tools.home`)"
      - "traefik.http.routers.web.middlewares=auth"
      - "traefik.http.routers.web.tls=true"
  spa:
    build:
      dockerfile: client.dockerfile
      args:
        - DEMO_API_CLIENT_ID=$DEMO_API_CLIENT_ID
        - MOCK_AUTH_SERVICE=$MOCK_AUTH_SERVICE
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.spa.loadbalancer.server.port=3000"
      - "traefik.http.routers.spa.entrypoints=websecure"
      - "traefik.http.routers.spa.rule=Host(`spa.auth-tools.home`)"
      - "traefik.http.routers.spa.tls=true"

  api:
    build:
      dockerfile: server.dockerfile
    environment:
      - SPRING_ACTUATOR_PORT=8082
      - ISSUER=$ISSUER
      - SERVER_SERVLET_CONTEXT_PATH=/api
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.api.loadbalancer.server.port=8080"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.rule=Host(`spa.auth-tools.home`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.tls=true"
    healthcheck:
      test: "curl --fail --silent localhost:8082/actuator/health/readiness | grep UP || exit 1"
      interval: 2s
      timeout: 3s
      retries: 5
      start_period: 2s
  agent:
    environment:
      - ISSUER=$ISSUER
      - BASE_PATH=
      - PUBLIC_URL=https://auth.auth-tools.home
      - COOKIE_DOMAIN=auth-tools.home
      - CLIENT_ID=$CLIENT_ID
      - CLIENT_SECRET=$CLIENT_SECRET
    build:
      context: ./agent
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.agent.loadbalancer.server.port=8080"
      - "traefik.http.routers.agent.entrypoints=websecure"
      - "traefik.http.routers.agent.rule=Host(`auth.auth-tools.home`)"
      - "traefik.http.routers.agent.tls=true"
  proxy:
    image: traefik:v3.0.0
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./test/traefik.yml:/etc/traefik/traefik.yml
      - ./test/traefik.dyn.yml:/etc/traefik/traefik.dyn.yml
      - /etc/certs:/etc/certs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.proxy.entrypoints=websecure"
      - "traefik.http.routers.proxy.rule=Host(`dashboard.auth-tools.home`)"
      - "traefik.http.routers.proxy.service=api@internal"
      - "traefik.http.routers.proxy.tls=true"
  mock-identity-provider:
    build:
      context: ./mock_identity_provider
    environment:
      - TENANT_ID=$TENANT_ID
      - CLIENT_ID=$CLIENT_ID
      - ISSUER=$ISSUER
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.mock-identity-provider.loadbalancer.server.port=8080"
      - "traefik.http.routers.mock-identity-provider.entrypoints=websecure"
      - "traefik.http.routers.mock-identity-provider.rule=Host(`idp.auth-tools.home`)"
      - "traefik.http.routers.mock-identity-provider.tls=true"
